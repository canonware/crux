################################################################################
#
# <Copyright = jasone>
# <License>
#
################################################################################
#
# Version: Crux <Version = crux>
#
# Makefile.in
#
################################################################################

SHELL := /bin/sh

# Force a full rebuild if any of the header files have changed.  In an ideal
# world, all build dependencies would be tracked in one place, but setup.py
# only does part of the job, so this kludge is necessary to avoid inconsistent
# partial rebuilds.
all:
	@mkdir -p @objroot@/build/share/Crux-@crux_version@
	@sh -c 'force=0; \
		for f in @manual_deps@; do \
			if @TEST@ "@objroot@/build.stamp" -ot "$$f"; then \
				@ECHO@ Force full rebuild due to $$f; \
				force=1; \
			fi \
		done; \
		if @TEST@ "x$$force" = "x0"; then \
			@ECHO@ "@PYTHON@ setup.py build"; \
			@PYTHON@ setup.py build; \
		else \
			@ECHO@ "@PYTHON@ setup.py build --force"; \
			@PYTHON@ setup.py build --force; \
		fi'
	@ECHO@ stamp > @objroot@/build.stamp

pickles: all
	@objroot@/bin/crux --batch --infile=@srcroot@/pickles.crux

install: all pickles
	install -d @prefix@/share/Crux-@crux_version@
	@for f in `find @abs_objroot@/build/share/Crux-@crux_version@ -type f`; do \
	install -m 644 $f @abs_objroot@/build/share/Crux-@crux_version@; \
done
	@PYTHON@ setup.py install

check: all
	@sh -c 'total=0; \
		failures=0; \
		@ECHO@ "========================================="; \
		for t in @crux_tests@; do \
			total=`expr $$total + 1`; \
			@ECHO@ -n "$$t ... "; \
			2>&1 @objroot@/bin/crux --batch --quiet --infile=$$t \
			  -- @srcroot@ @objroot@ \
			  | @PERL@ -pe "s/\[[1-9][0-9]* refs\]\n//g" \
			  > $${t}.out; \
			if @TEST@ -e "$${t}.exp"; then \
				2>&1 diff -u $${t}.exp $${t}.out >/dev/null; \
				fail=$$?; \
				if @TEST@ "$$fail" -eq "1" ; then \
					failures=`expr $$failures + 1`; \
					@ECHO@ "*** FAIL ***"; \
				else \
					@ECHO@ "pass"; \
				fi; \
			else \
				@ECHO@ "*** FAIL *** (.exp file is missing)"; \
				failures=`expr $$failures + 1`; \
			fi; \
		done; \
		@ECHO@ "========================================="; \
		@ECHO@ "Failures: $$failures/$$total"'

clean:
	rm -rf @objroot@/build
	@sh -c 'for t in @crux_tests@; do \
			@ECHO@ "rm -f $${t}.out"; \
			rm -f $${t}.out; \
		done'

distclean: clean
	rm -f @objroot@/config.log
	rm -f @objroot@/config.status
	rm -f @objroot@/config.stamp
	rm -f @cfghdrs@
	rm -f @cfgoutputs@

cyclean:
	rm -f @cython_outputs@

relclean: distclean cyclean
	rm -rf @objroot@/autom4te.cache
	rm -f @objroot@/configure

# Re-configuration rules.
ifeq (@enable_autogen@, 1)
@srcroot@/configure : @srcroot@/configure.ac
	cd @srcroot@ && @AUTOCONF@

@objroot@/config.status : @srcroot@/configure
	@objroot@/config.status --recheck

@srcroot@/config.stamp.in : @srcroot@/configure.ac
	cd @srcroot@ && @AUTOHEADER@
	@ECHO@ stamp > @srcroot@/config.stamp.in

$(patsubst %, @srcroot@/%.in, @cfghdrs@) : @srcroot@/config.stamp.in

@objroot@/config.stamp : $(patsubst %, @srcroot@/%.in, @cfghdrs@) \
			 @objroot@/config.status
	@objroot@/config.status

$(patsubst %, @objroot@/%, @cfgoutputs@) : \
		$(patsubst %, @srcroot@/%.in, @cfgoutputs@) \
		@objroot@/config.status
	@objroot@/config.status
endif
