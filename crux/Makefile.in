# Clear out all vpaths, then set just one (default vpath) for the main build
# directory.
vpath
vpath % .

# Clear the default suffixes, so that built-in rules are not used.
.SUFFIXES :

SHELL := /bin/sh

# Build parameters.
CPPFLAGS := @CPPFLAGS@
MTCPPFLAGS := @MTCPPFLAGS@
CFLAGS := @CFLAGS@ -fPIC -DPIC
MTCFLAGS := @MTCFLAGS@
ifeq (macho, @abi@)
CFLAGS += -dynamic
endif
LDFLAGS := @LDFLAGS@

# File lists.
CSRCS := @csrcs@
FSRCS := @fsrcs@
PXDS := @pxds@
PYXS := @pyxs@
PKGS := @pkgs@
PYS := @pys@
TESTS := @tests@

# Default target.
all: inst

# Flex-generated .c files.  These are not included in CSRCS.
FLCS := $(FSRCS:%.l=%.c)

# Cython-generated .c files.
CYCS := $(PYXS:%.pyx=%.c) $(PKGS:%.pyx=%.c)

# Prevent make from deleting .o files, since each .o can be used for linking
# multiple targets, potentially across make invocations (ex: make run; make
# inst).
.SECONDARY: $(CYCS:@srcroot@pkg/%.c=@objroot@build/pkg/%.o) \
		$(CSRCS:@srcroot@lib/%.c=@objroot@build/lib/%.o) \
		$(FLCS:@srcroot@lib/%.c=@objroot@build/lib/%.o)

# Include generated dependency files.
-include $(CYCS:@srcroot@pkg/%.c=@objroot@build/pkg/%.d) \
	$(CSRCS:@srcroot@lib/%.c=@objroot@build/lib/%.d) \
	$(FLCS:@srcroot@lib/%.c=@objroot@build/lib/%.d)

dist: $(FLCS) $(CYCS)

run: @objroot@build/run/bin/crux \
		$(CYCS:@srcroot@pkg/%.c=@objroot@build/run/site-packages/%.so) \
		$(PYS:@srcroot@pkg/%=@objroot@build/run/site-packages/%)
	@mkdir -p @objroot@build/run/share/Crux/parsers

inst: pickles @objroot@build/inst/bin/crux \
	$(CYCS:@srcroot@pkg/%.c=@objroot@build/inst/site-packages/%.so) \
	$(PYS:@srcroot@pkg/%=@objroot@build/inst/site-packages/%)

pickles: run
	@objroot@build/run/bin/crux --verbose @srcroot@pickles.cx

install: inst
	install -d @BINDIR@
	install -m 755 @objroot@build/inst/bin/crux @BINDIR@
	install -d @DATADIR@/Crux/lib
	install -m 755 @objroot@build/inst/share/Crux/lib/libCx.so @DATADIR@/Crux/lib
	install -d @DATADIR@/Crux/parsers
	@for f in `find @abs_objroot@build/run/share/Crux/parsers -type f`; do \
	echo "install -m 644 $$f @DATADIR@/Crux/parsers"; \
	install -m 644 $$f @DATADIR@/Crux/parsers; \
done
	@for d in $(patsubst @objroot@build/inst/site-packages/%,@site_packages@/%,$(sort $(dir $(CYCS:@srcroot@pkg/%.c=@objroot@build/inst/site-packages/%.so) $(PYS:@srcroot@pkg/%=@objroot@build/inst/site-packages/%)))); do \
	echo "install -d $$d"; \
	install -d $$d; \
done
	@for f in $(patsubst @objroot@build/inst/site-packages/%,%,$(CYCS:@srcroot@pkg/%.c=@objroot@build/inst/site-packages/%.so) $(PYS:@srcroot@pkg/%=@objroot@build/inst/site-packages/%)); do \
	echo "install -m 755 @objroot@build/inst/site-packages/$$f @site_packages@/`dirname $$f`"; \
	install -m 755 @objroot@build/inst/site-packages/$$f @site_packages@/`dirname $$f`; \
done

check: run
	@sh -c 'total=0; \
		failures=0; \
		@ECHO@ "========================================="; \
		for t in $(TESTS); do \
			total=`expr $$total + 1`; \
			@ECHO@ -n "$$t ... "; \
			2>&1 @objroot@build/run/bin/crux $$t - \
			  @abs_srcroot@ @abs_objroot@ \
			  | @PERL@ -pe "s/\[[1-9][0-9]* refs\]\n//g" \
			  > $${t}.out; \
			if @TEST@ -e "$${t}.exp"; then \
				2>&1 diff -u $${t}.exp $${t}.out >/dev/null; \
				fail=$$?; \
				if @TEST@ "$$fail" -eq "1" ; then \
					failures=`expr $$failures + 1`; \
					@ECHO@ "*** FAIL ***"; \
				else \
					@ECHO@ "pass"; \
				fi; \
			else \
				@ECHO@ "*** FAIL *** (.exp file is missing)"; \
				failures=`expr $$failures + 1`; \
			fi; \
		done; \
		@ECHO@ "========================================="; \
		@ECHO@ "Failures: $$failures/$$total"'

clean:
	rm -rf @objroot@build
	rm -f @objroot@test/*.out
	rm -f @objroot@test/*.log
	rm -f @objroot@test/*.pickle

distclean: clean
	rm -f @objroot@config.log
	rm -f @objroot@config.status
	rm -f @objroot@cfghdrs.stamp
	rm -f @objroot@cfgoutputs.stamp
	rm -f @cfghdrs@
	rm -f @cfgoutputs@

flclean:
ifeq (@enable_flex@, 1)
	rm -f $(FLCS)
endif

cyclean:
ifeq (@enable_cython@, 1)
	rm -f $(CYCS)
endif

relclean: distclean flclean cyclean
	rm -rf @objroot@autom4te.cache
	rm -f @objroot@configure

#===============================================================================
# Handle SFMT compilation specially.
@objroot@build/lib/SFMT/%.o : @srcroot@lib/SFMT/%.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(MTCFLAGS) $(CPPFLAGS) $(MTCPPFLAGS) $(sort $(patsubst %,-I%,$(dir $(CSRCS)))) $(sort $(patsubst %,-I%,$(dir $(CSRCS:@srcroot@lib/%=@objroot@build/lib/%)))) -c $< -o$@
	@$(SHELL) -ec "$(CC) -MM $(CPPFLAGS) $(MTCPPFLAGS) $< | sed \"s/\($(subst /,\/,$(notdir $(basename $@)))\)\.o\([ :]*\)/$(subst /,\/,$(strip $(dir $@)))\1.o \2/g\" > $(@:%.o=%.d)"

# Handle dSFMT compilation specially.
@objroot@build/lib/dSFMT/%.o : @srcroot@lib/dSFMT/%.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(MTCFLAGS) $(CPPFLAGS) $(MTCPPFLAGS) $(sort $(patsubst %,-I%,$(dir $(CSRCS)))) $(sort $(patsubst %,-I%,$(dir $(CSRCS:@srcroot@lib/%=@objroot@build/lib/%)))) -c $< -o$@
	@$(SHELL) -ec "$(CC) -MM $(CPPFLAGS) $(MTCPPFLAGS) $< | sed \"s/\($(subst /,\/,$(notdir $(basename $@)))\)\.o\([ :]*\)/$(subst /,\/,$(strip $(dir $@)))\1.o \2/g\" > $(@:%.o=%.d)"

@objroot@build/lib/%.o : @srcroot@lib/%.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(sort $(patsubst %,-I%,$(dir $(CSRCS)))) $(sort $(patsubst %,-I%,$(dir $(CSRCS:@srcroot@lib/%=@objroot@build/lib/%)))) -c $< -o$@
	@$(SHELL) -ec "$(CC) -MM $(CPPFLAGS) $< | sed \"s/\($(subst /,\/,$(notdir $(basename $@)))\)\.o\([ :]*\)/$(subst /,\/,$(strip $(dir $@)))\1.o \2/g\" > $(@:%.o=%.d)"

#===============================================================================
@objroot@build/run/share/Crux/lib/libCx.so : \
		$(CSRCS:@srcroot@lib/%.c=@objroot@build/lib/%.o) \
		$(FLCS:@srcroot@lib/%.c=@objroot@build/lib/%.o)
	@mkdir -p $(@D)
ifeq (elf, @abi@)
	$(CC) -shared -Wl,-soname,libCx.so -o $@ $+
endif
ifeq (macho, @abi@)
	$(CC) -undefined dynamic_lookup -dynamiclib -install_name @abs_objroot@build/run/shard/Crux/lib/libCx.so -o $@ $+
endif

@objroot@build/inst/share/Crux/lib/libCx.so : \
		$(CSRCS:@srcroot@lib/%.c=@objroot@build/lib/%.o) \
		$(FLCS:@srcroot@lib/%.c=@objroot@build/lib/%.o)
	@mkdir -p $(@D)
ifeq (elf, @abi@)
	$(CC) -shared -Wl,-soname,libCx.so -o $@ $+
endif
ifeq (macho, @abi@)
	$(CC) -undefined dynamic_lookup -dynamiclib -install_name @DATADIR@/share/Crux/lib/libCx.so -o $@ $+
endif

#===============================================================================
# Flex-generated files are shipped with releases, so the following rule is not
# always needed.
ifeq (@enable_flex@, 1)
@srcroot@%.c @srcroot@%.h : @srcroot@%.l
	@FLEX@ -CFa -8 -v --header-file=$(<:%.l=%.h) -o $(<:%.l=%.c) $<
endif

#===============================================================================
# Cython-generated files are shipped with releases, so the following rule is
# not always needed.
ifeq (@enable_cython@, 1)
@srcroot@%.c : @srcroot@%.pyx @srcroot@%.pxd
	@PYTHON@ @CYTHON@ -I@srcroot@pkg $(sort $(patsubst %,-I%,$(dir $(CSRCS)))) @python_config_includes@ -o $@ $<
	@@abs_objroot@cydep -I/usr/include $(sort $(patsubst %,-I%,$(dir $(CSRCS)))) $(sort $(patsubst %,-I%,$(dir $(CSRCS:@srcroot@lib/%=@objroot@build/lib/%)))) -P@srcroot@pkg $(sort $(patsubst %,-P%,$(dir $(CSRCS)))) $(patsubst %,--infile=%,$+) --targetfile=$@ --depfile=$(@:@srcroot@pkg/%.c=@objroot@build/pkg/%.d)
endif

#===============================================================================
@objroot@build/pkg/%.o : @srcroot@pkg/%.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(sort $(patsubst %,-I%,$(dir $(CSRCS)))) $(sort $(patsubst %,-I%,$(dir $(CSRCS:@srcroot@lib/%=@objroot@build/lib/%)))) @python_config_cflags@ -c $< -o$@

#===============================================================================
# Rules for building packages/modules that link against libCx.  These rules
# must come before the more generic rules that follow.
@objroot@build/run/site-packages/Crux/%.so : @objroot@build/pkg/Crux/%.o \
				@objroot@build/run/share/Crux/lib/libCx.so
	@mkdir -p $(@D)
ifneq ($(words "" @RPATH@), 1)
	$(CC) -shared @RPATH@@abs_objroot@build/run/share/Crux/lib @python_config_ldflags@ -o $@ $+
else
	$(CC) -shared @python_config_ldflags@ -o $@ $+
endif

@objroot@build/inst/site-packages/Crux/%.so : @objroot@build/pkg/Crux/%.o \
				@objroot@build/inst/share/Crux/lib/libCx.so
	@mkdir -p $(@D)
ifneq ($(words "" @RPATH@), 1)
	$(CC) -shared @RPATH@@DATADIR@/Crux/lib @python_config_ldflags@ -o $@ $+
else
	$(CC) -shared @python_config_ldflags@ -o $@ $+
endif

#===============================================================================
@objroot@build/run/site-packages/%.so : @objroot@build/pkg/%.o
	@mkdir -p $(@D)
	$(CC) -shared @python_config_ldflags@ -o $@ $+

@objroot@build/inst/site-packages/%.so : @objroot@build/pkg/%.o
	@mkdir -p $(@D)
	$(CC) -shared @python_config_ldflags@ -o $@ $+

#===============================================================================
@objroot@build/run/site-packages/%.py : @srcroot@pkg/%.py
	@mkdir -p $(@D)
	@abs_objroot@cfg -r --infile=$< --outfile=$@

@objroot@build/inst/site-packages/%.py : @srcroot@pkg/%.py
	@mkdir -p $(@D)
	@abs_objroot@cfg -i --infile=$< --outfile=$@

#===============================================================================
@objroot@build/run/bin/% : @srcroot@bin/%
	@mkdir -p $(@D)
	@abs_objroot@cfg -r --infile=$< --outfile=$@

@objroot@build/inst/bin/% : @srcroot@bin/%
	@mkdir -p $(@D)
	@abs_objroot@cfg -i --infile=$< --outfile=$@

#===============================================================================
# Re-configuration rules.

ifeq (@enable_autogen@, 1)
@srcroot@configure : @srcroot@configure.ac
	cd ./@srcroot@ && @AUTOCONF@

@objroot@config.status : @srcroot@configure
	./@objroot@config.status --recheck

# cfghdrs rules.
@srcroot@cfghdrs.stamp.in : @srcroot@configure.ac
	@ECHO@ stamp > @srcroot@cfghdrs.stamp.in

@objroot@cfghdrs.stamp : $(patsubst %, @srcroot@%.in, @cfghdrs@) \
			 @srcroot@configure
	./@objroot@config.status

@cfghdrs@ : @objroot@cfghdrs.stamp

# cfgoutputs rules.
@srcroot@cfgoutputs.stamp.in : @srcroot@configure.ac
	@ECHO@ stamp > @srcroot@cfgoutputs.stamp.in

@objroot@cfgoutputs.stamp : $(patsubst %, @srcroot@%.in, @cfgoutputs@) \
			    @srcroot@configure
	./@objroot@config.status

# There must be some action in order for make to re-read Makefile when it is
# out of date.
@cfgoutputs@ : @objroot@cfgoutputs.stamp
	@true
endif
