import sys

print "Test begin"

fastaStrs = [
    """\
>one
ACGT
>two
AAAA
""",

    """\
>A
    ata
>B
    cta
>C
    cat
>D
    gat
>E
    gtr
"""
]

for s in fastaStrs:
    print "==============================================="
    alignment = Crux.CTMatrix.Alignment(Crux.CTMatrix.CTMatrix(s))
    print alignment.render()
    distMatrix = alignment.jukesDists(scoreGaps=True)
    t = distMatrix.rnj()
    t.canonize(distMatrix.taxaMap)
    t.render(lengths=True, outFile=sys.stdout)

    lik = Crux.Tree.Lik.Lik(t, alignment)
    print "lnL: %.4f" % lik.lnL()

    # Make sure that rate and frequency normalization do the right thing.
    lik.setRate(0, 0, 0.75)
    for i in xrange(4):
        lik.setFreq(0, i, 0.20)
    print "lnL: %.4f" % lik.lnL()

    # Make sure that mixtures work:
    lik.addModel(0.0)
    lik.dupModel(1, 0, True)
    lik.setWeight(0, 0.5)
    lik.setWeight(1, 0.5)
    print "lnL: %.4f" % lik.lnL()
    lik.addModel(0.0)
    lik.dupModel(2, 1, False)
    lik.setWeight(0, 0.0)
    lik.setWeight(1, 0.3)
    lik.setWeight(2, 0.7)
    print "lnL: %.4f" % lik.lnL()
    lik.setWeight(0, 1.0)
    lik.setWeight(1, 1.0)
    lik.setWeight(2, 1.0)
    print "lnL: %.4f" % lik.lnL()

print "Test end"
